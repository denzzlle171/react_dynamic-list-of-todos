{"version":3,"sources":["api.ts","types/ByStatus.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","ByStatus","TodoList","todos","handleShowTodo","selectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","setFiltredByStatus","setQuery","query","onChange","e","target","value","all","activ","placeholder","length","style","pointerEvents","Loader","TodoModal","setShowModal","isLoadingUser","selectedUser","setSelectedTodo","href","email","name","App","useState","setTodos","isLoading","setIsLoading","filtredByStatus","showModal","setSelectedUser","setIsLoadingUser","useEffect","fetchedTodos","filteredTodos","filter","includes","trim","toLowerCase","userId","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f09f4a23.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum ByStatus {\n  all = 'all',\n  activ = 'activ',\n  completed = 'completed',\n\n}\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  handleShowTodo: (value: Todo) => void;\n  selectedTodo: Todo | null;\n\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  handleShowTodo,\n  selectedTodo,\n\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr data-cy=\"todo\" key={todo.id} className=\"\">\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={\n                todo.completed ? 'has-text-success' : 'has-text-danger'\n              }\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => handleShowTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={\n                    selectedTodo && todo.id === selectedTodo.id\n                      ? 'far fa-eye-slash'\n                      : 'far fa-eye'\n                  }\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\n// <tr data-cy=\"todo\" className=\"has-background-info-light\">\n//   <td className=\"is-vcentered\">2</td>\n//   <td className=\"is-vcentered\" />\n//   <td className=\"is-vcentered is-expanded\">\n//     <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n//   </td>\n//   <td className=\"has-text-right is-vcentered\">\n//     <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n//       <span className=\"icon\">\n//         <i className=\"far fa-eye-slash\" />\n//       </span>\n//     </button>\n//   </td>\n// </tr>\n\n// <tr data-cy=\"todo\" className=\"\">\n//   <td className=\"is-vcentered\">1</td>\n//   <td className=\"is-vcentered\" />\n//   <td className=\"is-vcentered is-expanded\">\n//     <p className=\"has-text-danger\">delectus aut autem</p>\n//   </td>\n//   <td className=\"has-text-right is-vcentered\">\n//     <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n//       <span className=\"icon\">\n//         <i className=\"far fa-eye\" />\n//       </span>\n//     </button>\n//   </td>\n// </tr>\n\n// <tr data-cy=\"todo\" className=\"\">\n//   <td className=\"is-vcentered\">6</td>\n//   <td className=\"is-vcentered\" />\n//   <td className=\"is-vcentered is-expanded\">\n//     <p className=\"has-text-danger\">\n//       qui ullam ratione quibusdam voluptatem quia omnis\n//     </p>\n//   </td>\n//   <td className=\"has-text-right is-vcentered\">\n//     <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n//       <span className=\"icon\">\n//         <i className=\"far fa-eye\" />\n//       </span>\n//     </button>\n//   </td>\n// </tr>\n\n// <tr data-cy=\"todo\" className=\"\">\n//   <td className=\"is-vcentered\">8</td>\n//   <td className=\"is-vcentered\">\n//     <span className=\"icon\" data-cy=\"iconCompleted\">\n//       <i className=\"fas fa-check\" />\n//     </span>\n//   </td>\n//   <td className=\"is-vcentered is-expanded\">\n//     <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n//   </td>\n//   <td className=\"has-text-right is-vcentered\">\n//     <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n//       <span className=\"icon\">\n//         <i className=\"far fa-eye\" />\n//       </span>\n//     </button>\n//   </td>\n// </tr>\n","import { ByStatus } from '../../types/ByStatus';\n\ntype Props = {\n  setFiltredByStatus: (status: ByStatus) => void;\n  setQuery: (status: string) => void;\n  query: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFiltredByStatus,\n  setQuery,\n  query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => setFiltredByStatus(e.target.value as ByStatus)}\n          >\n            <option value={ByStatus.all}>All</option>\n            <option value={ByStatus.activ}>Active</option>\n            <option value={ByStatus.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  isLoadingUser: boolean;\n  setShowModal: (value: boolean) => void;\n  selectedUser: User | null;\n  selectedTodo: Todo | null;\n  setSelectedTodo: (value: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  setShowModal,\n  isLoadingUser,\n  selectedUser,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoadingUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setShowModal(false);\n                setSelectedTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo && selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo ? (\n                <strong\n                  className={\n                    selectedTodo.completed\n                      ? 'has-text-success'\n                      : 'has-text-danger'\n                  }\n                >\n                  {selectedTodo.completed ? 'Done' : 'Planned'}\n                </strong>\n              ) : null}\n              {' by '}\n              {selectedUser ? (\n                <a href={`mailto:${selectedUser.email}`}>{selectedUser.name}</a>\n              ) : null}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos, getUser } from './api';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { ByStatus } from './types/ByStatus';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [filtredByStatus, setFiltredByStatus] = useState<ByStatus>(\n    ByStatus.all,\n  );\n  const [query, setQuery] = useState<string>('');\n  const [showModal, setShowModal] = useState<boolean>(false);\n\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isLoadingUser, setIsLoadingUser] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos().then((fetchedTodos) => {\n      setTodos(fetchedTodos);\n      setIsLoading(false);\n    });\n  }, []);\n\n  const handleShowTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n    setShowModal(true);\n    setIsLoadingUser(true);\n\n    getUser(todo.userId).then((user) => {\n      setSelectedUser(user);\n      setIsLoadingUser(false);\n    });\n  };\n\n  const filteredTodos = todos.filter((todo) => {\n    switch (filtredByStatus) {\n      case ByStatus.all:\n        return true;\n      case ByStatus.activ:\n        return !todo.completed;\n      case ByStatus.completed:\n        return todo.completed;\n      default:\n        return true;\n    }\n  }).filter(todo => {\n    return todo.title.includes(query.trim().toLowerCase());\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFiltredByStatus={setFiltredByStatus}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodo={selectedTodo}\n                  handleShowTodo={handleShowTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal && (\n        <TodoModal\n          setShowModal={setShowModal}\n          isLoadingUser={isLoadingUser}\n          selectedUser={selectedUser}\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}